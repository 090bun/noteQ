# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  django:
    build:
      context: ./backend-django
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DJANGO_SETTINGS_MODULE: myapps.settings
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    ports:
      - "8000:8000"
    volumes:
      - ./backend-django:/app
    restart: always
  flask:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "5000:5000"
    volumes:
      - ./ml-service:/topic_apps
    restart: always
  web:
    build:
      context: ./frontend/my-app
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "3000:3000"
    restart: always


  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
    - ./nginx.conf:/etc/nginx/conf.d/default.conf
    - ./frontend/my-app/out:/usr/share/nginx/html
    depends_on:
      - django
      - flask
      - web